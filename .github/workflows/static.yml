# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    tags: 
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check-for-tag:
    runs-on: windows-latest
    outputs:
      commit-tag: ${{ steps.check-for-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if commit is tagged
        id: check-for-tag
        shell: bash
        run: |
          SHA=`git rev-parse HEAD`
          echo "SHA: $SHA"
          TAG=`git describe --exact-match $SHA`
          echo "Tag: $TAG"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: windows-latest
    needs: check-for-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Create directories
        shell: cmd
        env:
          TAG: ${{needs.check-for-tag.outputs.commit-tag}}
        run: |
          mkdir pages
          mkdir pages\stable
          mkdir pages\dev
          mkdir pages\artifact
          copy index.html pages\

          echo "Trigger: ${{ github.ref_type }}"
          echo "Tag: %TAG%
        
      - name: Get stable docs
        if: github.ref_type != 'tag'
        shell: cmd
        run: |
          cd pages
          curl -o artifact\stable.zip https://davidrg.github.io/pages-test/artifact/stable.zip
          if exist artifact\stable.zip echo Have stable artifact
          if exist artifact\stable.zip 7z x artifact\stable.zip
          if not exist artifact\stable.zip echo Don't have stable artifact, deploying this build as stable.
          if not exist artifact\stable.zip echo "have_stable_artifact=no" >> %GITHUB_ENV%
          
      - name: Use current build as stable docs
        if: github.ref_type == 'tag' || env.have_stable_artifact == 'no'
        shell: cmd
        run: |
          cd pages
          dir
          dir stable\
          copy ..\doc\test.html stable\
          dir
          dir stable\
          7z a -tzip artifact\stable.zip stable
          dir artifact\

      - name: Use current build as dev docs
        shell: cmd
        run: |
          copy doc\test.html pages\dev\

      - name: Check result
        shell: cmd
        run: |
          echo "==================== STABLE =========================="
          type pages\stable\test.html
          echo "==================== DEV    =========================="
          type pages\dev\test.html
            
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './pages'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
